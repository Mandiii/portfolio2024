{"ast":null,"code":"var _jsxFileName = \"C:\\\\Stuff\\\\Design\\\\2024 Projects\\\\Portfolio\\\\portfolio2024\\\\src\\\\pages\\\\AdminNewProject.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { useState } from \"react\";\nimport createProject from '../services/createProject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminNewProject() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  // const [coverImg, setCoverImg] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [context, setContext] = useState(\"\");\n  // const [formInfo, setFormInfo] = useState(\n  //   {\n  //     \"title\": title,\n  //     \"description\": description, \n  //     \"type\": type,\n  //     \"tags\": tags,\n  //     \"date\": date,\n  //     \"duration\": duration,\n  //     \"context\": context,\n  //     \"constraints\": constraints\n  //   });\n\n  // \"coverImg\": {coverImg},\n  // const token = useSelector((state) => state.admin);\n  // let projectInfo = new FormData\n  // let image = \n  // projectInfo.append(\"title\", formInfo.title)\n  // const projectInfo = {\n  //   \"title\": title,\n  //   \"description\": description,      \n  //   \"type\": type,\n  //   \"tags\": tags,\n  //   \"date\": date,\n  //   \"duration\": duration,\n  //   \"context\": context,\n  //   \"constraints\": constraints\n  // }\n\n  // async function sendProject() {\n  //   try {\n  //     console.log(title)\n  //     console.log(projectInfo)\n  //     createProject(token, projectInfo)\n  //   } catch (error) {\n  //     alert(error.message)\n  //   }\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n_s(AdminNewProject, \"pqJcdxfObtvO9OBJdnRBx0wTpSY=\");\n_c = AdminNewProject;\nexport default AdminNewProject;\nvar _c;\n$RefreshReg$(_c, \"AdminNewProject\");","map":{"version":3,"names":["useSelector","useState","createProject","jsxDEV","_jsxDEV","AdminNewProject","_s","title","setTitle","description","setDescription","type","setType","tags","setTags","date","setDate","duration","setDuration","context","setContext","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Stuff/Design/2024 Projects/Portfolio/portfolio2024/src/pages/AdminNewProject.js"],"sourcesContent":["import {  useSelector } from 'react-redux'\r\nimport { useState } from \"react\";\r\nimport createProject from '../services/createProject';\r\n\r\nfunction AdminNewProject() {\r\n  \r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    // const [coverImg, setCoverImg] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [date, setDate] = useState(\"\");\r\n    const [duration, setDuration] = useState(\"\");\r\n    const [context, setContext] = useState(\"\");\r\n    // const [formInfo, setFormInfo] = useState(\r\n    //   {\r\n    //     \"title\": title,\r\n    //     \"description\": description, \r\n    //     \"type\": type,\r\n    //     \"tags\": tags,\r\n    //     \"date\": date,\r\n    //     \"duration\": duration,\r\n    //     \"context\": context,\r\n    //     \"constraints\": constraints\r\n    //   });\r\n  \r\n    // \"coverImg\": {coverImg},\r\n    // const token = useSelector((state) => state.admin);\r\n    // let projectInfo = new FormData\r\n    // let image = \r\n    // projectInfo.append(\"title\", formInfo.title)\r\n    // const projectInfo = {\r\n    //   \"title\": title,\r\n    //   \"description\": description,      \r\n    //   \"type\": type,\r\n    //   \"tags\": tags,\r\n    //   \"date\": date,\r\n    //   \"duration\": duration,\r\n    //   \"context\": context,\r\n    //   \"constraints\": constraints\r\n    // }\r\n\r\n    // async function sendProject() {\r\n    //   try {\r\n    //     console.log(title)\r\n    //     console.log(projectInfo)\r\n    //     createProject(token, projectInfo)\r\n    //   } catch (error) {\r\n    //     alert(error.message)\r\n    //   }\r\n\r\n    // }\r\n  \r\n    return (\r\n      <main>\r\n        <section>\r\n          <h1>New Project</h1>\r\n          {/* <form onSubmit={(e) => e.preventDefault()}>\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"title\">Project Title</label>\r\n              <input type=\"text\" id=\"title\" value={title}\r\n                     onChange={(event) => setTitle(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"description\">Project description</label>\r\n              <input type=\"text\" id=\"description\" value={description}\r\n                     onChange={(event) => setDescription(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"coverImg\">Cover Image</label>\r\n              <input type=\"file\" accept=\".png, .jpg, .jpeg, .svg\" id=\"coverImg\" value={coverImg}\r\n                     onChange={(event) => setCoverImg(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"type\">Type</label>\r\n              <input type=\"text\" id=\"type\" value={type}\r\n                     onChange={(event) => setType(event.target.value)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"tags\">Tags</label>\r\n              <input type=\"text\" id=\"tags\" value={tags}\r\n                     onChange={(event) => setTags(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"date\">Date</label>\r\n              <input type=\"text\" id=\"date\" value={date}\r\n                     onChange={(event) => setDate(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"duration\">Duration</label>\r\n              <input type=\"text\" id=\"duration\" value={duration}\r\n                     onChange={(event) => setDuration(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"context\">Context</label>\r\n              <input type=\"text\" id=\"context\" value={context}\r\n                     onChange={(event) => setContext(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"contraints\">Constraints</label>\r\n              <input type=\"text\" id=\"\" value={constraints}\r\n                     onChange={(event) => setConstraints(event.target.value)} />\r\n            </div>\r\n  \r\n            <button className=\"btn-primary\" onClick={() => sendProject()}>Send</button> */}\r\n          {/* </form> */}\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n  \r\n  export default AdminNewProject;"],"mappings":";;AAAA,SAAUA,WAAW,QAAQ,aAAa;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAEvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACEG,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAAiB,QAAA,eACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA2Db;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEX;AAACnB,EAAA,CAlHMD,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AAoHtB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}