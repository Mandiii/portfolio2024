{"ast":null,"code":"const getAdminToken=async(username,password)=>{let response=await fetch('http://localhost:3001/api/auth/login',{method:'POST',headers:{\"accept\":\"application/json\",\"content-Type\":\"application/json\"},body:JSON.stringify({\"username\":username,\"password\":password})});if(response.ok){const data=await response.json();console.log(data.token);return data.token;}else if(response.status===400){const error=await response.json();throw new Error(error.message);}else{throw new Error(\"An unidentified error occurred. Please, check the connection to the server and try again.\");}};export default getAdminToken;","map":{"version":3,"names":["getAdminToken","username","password","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","token","status","error","Error","message"],"sources":["C:/Stuff/Design/2024 Projects/Portfolio/portfolio2024/src/services/getAdminToken.js"],"sourcesContent":["const getAdminToken = async(username, password) => {\r\n\r\n    let response = await fetch('http://localhost:3001/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            \"accept\": \"application/json\",\r\n            \"content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            \"username\": username,\r\n            \"password\": password\r\n        })\r\n    });\r\n\r\n    if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data.token)\r\n        return data.token;\r\n    } else if (response.status === 400) {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n    } else {\r\n        throw new Error(\"An unidentified error occurred. Please, check the connection to the server and try again.\");\r\n    }\r\n}\r\nexport default getAdminToken;"],"mappings":"AAAA,KAAM,CAAAA,aAAa,CAAG,KAAAA,CAAMC,QAAQ,CAAEC,QAAQ,GAAK,CAE/C,GAAI,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,sCAAsC,CAAE,CAC/DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjB,UAAU,CAAER,QAAQ,CACpB,UAAU,CAAEC,QAChB,CAAC,CACL,CAAC,CAAC,CAEF,GAAIC,QAAQ,CAACO,EAAE,CAAE,CACb,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,KAAK,CAAC,CACvB,MAAO,CAAAJ,IAAI,CAACI,KAAK,CACrB,CAAC,IAAM,IAAIZ,QAAQ,CAACa,MAAM,GAAK,GAAG,CAAE,CAChC,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAd,QAAQ,CAACS,IAAI,CAAC,CAAC,CACnC,KAAM,IAAI,CAAAM,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC,CAClC,CAAC,IAAM,CACH,KAAM,IAAI,CAAAD,KAAK,CAAC,2FAA2F,CAAC,CAChH,CACJ,CAAC,CACD,cAAe,CAAAlB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}